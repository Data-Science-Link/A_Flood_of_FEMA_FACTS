group_by(., state) %>%
summarise(., n()) %>%
select(., state)
State_Names = State_Names[['state']]
save(State_Names,
filter.raw.df,
Accumulate_DF,
Accumulate_DF_0_to_1,
major_storms,
Top_Ten_State_Names_Table,
file = "./FEMA_Flood_Claims/processed_data.Rdata")
runApp('FEMA_Flood_Claims')
Top_Ten_County_Names_Table =
filter.raw.df.counties %>%
group_by(., state, county_name) %>%
summarise(., Total_Summed_Loss = sum(amountpaidtotal)) %>%
top_n(n = 10, wt = Total_Summed_Loss)
Top_Ten_County_Names_Table =
filter.raw.df.counties %>%
group_by(., state, county_name) %>%
summarise(., Total_Summed_Loss = sum(amountpaidtotal)) %>%
top_n(n = 10, wt = Total_Summed_Loss)
Top_Ten_County_Names = Top_Ten_County_Names[['UID']]
save(State_Names,
filter.raw.df,
Accumulate_DF,
Accumulate_DF_0_to_1,
major_storms,
Top_Ten_State_Names_Table,
Top_Ten_County_Names_Table,
file = "./FEMA_Flood_Claims/processed_data.Rdata")
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
Accumulate_DF_Counties =
filter.raw.df %>%
filter(., yearofloss <= 1990, state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., state, floodzone, county) %>%
summarise(., accumulated_loss = sum(amountpaidtotal)) %>%
mutate(., yearofloss = 1990)
Accumulate_DF_Counties =
filter.raw.df %>%
filter(., yearofloss <= 1990, state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., state, floodzone, county) %>%
summarise(., accumulated_loss = sum(amountpaidtotal)) %>%
mutate(., yearofloss = 1990)
Accumulate_DF_Counties =
filter.raw.df.counties %>%
filter(., yearofloss <= 1990, state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., state, floodzone, county_name) %>%
summarise(., accumulated_loss = sum(amountpaidtotal)) %>%
mutate(., yearofloss = 1990)
Accumulate_DF_Counties =
filter.raw.df.counties %>%
filter(., yearofloss == 1990, state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., state, floodzone, county_name) %>%
summarise(., accumulated_loss = sum(amountpaidtotal)) %>%
mutate(., yearofloss = 1990)
Accumulate_DF_Counties = Accumulate_DF_Counties[0,]
for (i in min(filter.raw.df.counties$yearofloss):max(filter.raw.df.counties$yearofloss)) {
intermediate = filter.raw.df.counties %>%
filter(., yearofloss <= i, state != "", !is.na(state), !is.na(county_name), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., state, floodzone, county_name) %>%
summarise(., accumulated_loss = sum(amountpaidtotal)) %>%
mutate(., yearofloss = i)
Accumulate_DF_Counties = rbind(Accumulate_DF_Counties, intermediate)
}
View(Accumulate_DF_Counties)
1:3 %>% accumulate(`+`)
intermediate = filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
arrange(., yearofloss)
View(intermediate)
rerun(5, rnorm(100)) %>%
set_names(paste0("sim", 1:5)) %>%
map(~ accumulate(., ~ .05 + .x + .y))
A =
rerun(5, rnorm(100)) %>%
set_names(paste0("sim", 1:5)) %>%
map(~ accumulate(., ~ .05 + .x + .y))
View(A)
A =
rerun(5, rnorm(100)) %>%
set_names(paste0("sim", 1:5))
?cumsum
intermediate = filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
arrange(., state, yearofloss) %>%
# map(~ accumulate(., ~ .05 + .x + .y)) %>%
mutate(., cumsum = cumsum(amountpaidtotal))
load("/Users/michaellink/Desktop/__NYCDSA/_Projects/Shiny/fema_claims_new/FEMA_Flood_Claims/processed_data.Rdata")
View(Accumulate_DF)
Accumulate_DF_Test =
intermediate = filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
arrange(., state, yearofloss) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
View(Accumulate_DF_Test)
Accumulate_DF_Test =
intermediate = filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
arrange(., state, yearofloss) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
View(Accumulate_DF_Test)
cumsum(1:10)
Accumulate_DF =
intermediate = filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
arrange(., state, yearofloss) %>%
# map(~ accumulate(., ~ .05 + .x + .y)) %>%
mutate(., cumsum = cumsum(amountpaidtotal)) %>%
summarise(., accumulated_loss = sum(amountpaidtotal))
Accumulate_DF =
intermediate = filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
arrange(., yearofloss) %>%
# map(~ accumulate(., ~ .05 + .x + .y)) %>%
mutate(., cumsum = cumsum(amountpaidtotal)) %>%
summarise(., accumulated_loss = sum(amountpaidtotal))
# arrange(., yearofloss) %>%
View(filter.raw.df)
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
# arrange(., yearofloss) %>%
# map(~ accumulate(., ~ .05 + .x + .y)) %>%
mutate(., cumsum = cumsum(amountpaidtotal)) %>%
summarise(., accumulated_loss = sum(amountpaidtotal))
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
# arrange(., yearofloss) %>%
# map(~ accumulate(., ~ .05 + .x + .y)) %>%
mutate(., cumsum = cumsum(amountpaidtotal))
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
arrange(., yearofloss, state) %>%
# map(~ accumulate(., ~ .05 + .x + .y)) %>%
mutate(., cumsum = cumsum(amountpaidtotal))
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
# group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
arrange(., yearofloss, state, floodzone, region_name, division_name)
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
# arrange(., yearofloss, state, floodzone, region_name, division_name) %>%
# map(~ accumulate(., ~ .05 + .x + .y)) %>%
dplyr::mutate(., cumsum = cumsum(amountpaidtotal))
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., accumulated_loss = sum(amountpaidtotal))
Accumulate_DF_Test = Accumulate_DF_Test[['amountpaidtotal']]
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., accumulated_loss = sum(amountpaidtotal))
View(Accumulate_DF_Test)
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal))
Accumulate_DF_Test = Accumulate_DF_Test[['amountpaidtotal']]
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
cumsum(intermediate)
View(intermediate)
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal))
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal))
View(Accumulate_DF_Test)
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
cumsum(intermediate)
intermediate = cumsum(intermediate)
Accumulate_DF_Test =
Accumulate_DF_Test %>%
cbind(., intermediate)
Accumulate_DF_Test =
Accumulate_DF_Test %>%
cbind(., as.dataframe(intermediate))
Accumulate_DF_Test =
Accumulate_DF_Test %>%
cbind(., as.data.frame(intermediate))
View(Accumulate_DF_Test)
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal))
Accumulate_DF_Test =
Accumulate_DF_Test %>%
cbind(., as.tibble(intermediate))
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
intermediate = cumsum(intermediate)
Accumulate_DF_Test_2 =
Accumulate_DF_Test %>%
cbind(., as_tibble(intermediate))
Accumulate_DF_Test_2 =
Accumulate_DF_Test %>%
cbind(., cumulative = intermediate)
View(Accumulate_DF_Test_2)
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
intermediate = cumsum(intermediate)
Accumulate_DF_Test_2 =
Accumulate_DF_Test %>%
mutate(., cumulative = intermediate)
Accumulate_DF_Test_2 =
Accumulate_DF_Test %>%
mutate(., cumulative = intermediate) %>%
bind_cols(., intermediate)
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
intermediate = cumsum(intermediate)
class(intermediate)
class(Accumulate_DF_Test)
intermediate = as.data.frame(intermediate)
class(intermediate)
class(Accumulate_DF_Test)
Accumulate_DF_Test_2 =
Accumulate_DF_Test %>%
bind_cols(., intermediate)
View(intermediate)
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal))
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
intermediate = cumsum(intermediate)
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
intermediate2 = cumsum(intermediate)
intermediate3 = as.data.frame(intermediate)
Accumulate_DF_Test_2 =
Accumulate_DF_Test %>%
bind_cols(., intermediate3)
View(Accumulate_DF_Test_2)
intermediate3 = as.data.frame(intermediate2)
Accumulate_DF_Test_2 =
Accumulate_DF_Test %>%
bind_cols(., intermediate3)
View(Accumulate_DF_Test_2)
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal))
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
intermediate = as.data.frame(cumsum(intermediate))
Accumulate_DF_Test_2 =
Accumulate_DF_Test %>%
bind_cols(., intermediate)
filter.raw.df %>%
filter(., state == 'Alabama', state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal)) %>%
arrange(., yearofloss, state, floodzone, region_name, division_name)
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state == 'Alabama', state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal)) %>%
arrange(., yearofloss, state, floodzone, region_name, division_name)
View(Accumulate_DF_Test)
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state == 'Alabama', state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal)) %>%
arrange(., state, floodzone, yearofloss, region_name, division_name)
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state == 'Alabama', floodzone = '<100_yr', state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal)) %>%
arrange(., state, floodzone, yearofloss, region_name, division_name)
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state == 'Alabama', floodzone == '<100_yr', state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal)) %>%
arrange(., state, floodzone, yearofloss, region_name, division_name)
length(State_Names)
# make the second for loop based on filter year<=i and group_by state ony
Accumulate_DF =
filter.raw.df %>%
filter(., yearofloss <= 1990, state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., state, floodzone, region_name, division_name) %>%
summarise(., accumulated_loss = sum(amountpaidtotal)) %>%
mutate(., yearofloss = 1990)
Accumulate_DF = Accumulate_DF[0,]
for (i in 1:length(State_Names)) {
Accumulate_DF_Test =
filter.raw.df %>%
filter(., state == State_Names[[i]][i], floodzone == '<100_yr', state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., yearofloss, state, floodzone, region_name, division_name) %>%
summarise(., amountpaidtotal = sum(amountpaidtotal)) %>%
arrange(., state, floodzone, yearofloss, region_name, division_name)
intermediate = Accumulate_DF_Test[['amountpaidtotal']]
intermediate = as.data.frame(cumsum(intermediate))
Accumulate_DF_Test_2 =
Accumulate_DF_Test %>%
bind_cols(., intermediate)
Accumulate_DF = rbind(Accumulate_DF, Accumulate_DF_Test_2)
}
warnings()
iris %>%
group_by(Species) %>%
mutate(cum_sep_len = cumsum(Sepal.Length))
A  =
iris %>%
group_by(Species) %>%
mutate(cum_sep_len = cumsum(Sepal.Length))
View(A)
Accumulate_DF_Counties =
filter.raw.df.counties %>%
group_by(., yearofloss, state, county_name) %>%
summarise(., accumulated_loss = cumsum(amountpaidtotal))
Accumulate_DF_Counties =
filter.raw.df.counties %>%
group_by(., yearofloss, state, county_name) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
View(Accumulate_DF_Counties)
Accumulate_DF_Counties =
filter.raw.df.counties %>%
group_by(., yearofloss, state, floodzone, county_name) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
View(Accumulate_DF_Counties)
Accumulate_DF_Counties =
filter.raw.df.counties %>%
select(., yearofloss, state, floodzone, county_name, amountpaidtotal) %>%
group_by(., yearofloss, state, floodzone, county_name) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
Accumulate_DF_Counties =
filter.raw.df.counties %>%
ungroup() %>%
select(., yearofloss, state, floodzone, county_name, amountpaidtotal) %>%
group_by(., yearofloss, state, floodzone, county_name) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
Accumulate_DF_Counties =
filter.raw.df.counties %>%
ungroup() %>%
select(., yearofloss, state, floodzone, county_name, amountpaidtotal) %>%
group_by(., state, floodzone, county_name) %>%
arrange(., yearofloss) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
# arrange(., yearofloss) %>
Accumulate_DF_Counties =
filter.raw.df.counties %>%
ungroup() %>%
select(., yearofloss, UID, amountpaidtotal) %>%
group_by(., UID) %>%
# arrange(., yearofloss) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
Accumulate_DF_Counties =
filter.raw.df.counties %>%
ungroup() %>%
select(., yearofloss, state, UID, amountpaidtotal) %>%
group_by(., state, UID) %>%
# arrange(., yearofloss) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
Accumulate_DF_Counties =
filter.raw.df.counties %>%
ungroup() %>%
select(., yearofloss, state, UID, amountpaidtotal) %>%
group_by(., UID) %>%
# arrange(., yearofloss) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
Accumulate_DF_Counties =
filter.raw.df.counties %>%
ungroup() %>%
select(., yearofloss, UID, amountpaidtotal) %>%
group_by(., UID) %>%
# arrange(., yearofloss) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
Accumulate_DF_Counties =
filter.raw.df.counties %>%
ungroup() %>%
select(., UID, yearofloss, amountpaidtotal) %>%
group_by(., UID) %>%
# arrange(., yearofloss) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal))
Accumulate_DF_Counties =
filter.raw.df.counties %>%
ungroup() %>%
select(., UID, yearofloss, amountpaidtotal) %>%
group_by(., UID) %>%
# arrange(., yearofloss) %>%
mutate(., accumulated_loss = cumsum(amountpaidtotal)) %>%
arrange(., UID)
Test = left_join(filter.raw.df.counties,
Accumulate_DF_Counties,
by = c("UID" = "UID",
"yearofloss" = "yearofloss",
'amountpaidtotal' = 'amountpaidtotal'
))
View(Test)
filter.raw.df.counties = left_join(filter.raw.df.counties,
Accumulate_DF_Counties,
by = c("UID" = "UID",
"yearofloss" = "yearofloss",
'amountpaidtotal' = 'amountpaidtotal'
))
View(filter.raw.df.counties)
# make the second for loop based on filter year<=i and group_by state ony
Accumulate_DF =
filter.raw.df %>%
filter(., yearofloss <= 1990, state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., state, floodzone, region_name, division_name) %>%
summarise(., accumulated_loss = sum(amountpaidtotal)) %>%
mutate(., yearofloss = 1990)
Accumulate_DF = Accumulate_DF[0,]
for (i in min(filter.raw.df$yearofloss):max(filter.raw.df$yearofloss)) {
intermediate = filter.raw.df %>%
filter(., yearofloss <= i, state != "", !is.na(state), !is.na(yearofloss), !is.na(amountpaidtotal)) %>%
group_by(., state, floodzone, region_name, division_name) %>%
summarise(., accumulated_loss = sum(amountpaidtotal)) %>%
mutate(., yearofloss = i)
Accumulate_DF = rbind(Accumulate_DF, intermediate)
}
#assembling the accumulated dataframe from 0 to 1 for each state
Accumulate_DF_0_to_1 = data.frame()
for (i in 1:length(State_Names)) {
intermediate = Accumulate_DF %>%
filter(., state == State_Names[[i]][i]) %>%
mutate(., standardized_accumulation = accumulated_loss/max(accumulated_loss))
Accumulate_DF_0_to_1 = rbind(Accumulate_DF_0_to_1, intermediate)
}
#assembling the accumulated dataframe from 0 to 1 for each state
Accumulate_DF_0_to_1 = Accumulate_DF[0,]
for (i in 1:length(State_Names)) {
intermediate = Accumulate_DF %>%
filter(., state == State_Names[[i]][i]) %>%
mutate(., standardized_accumulation = accumulated_loss/max(accumulated_loss))
Accumulate_DF_0_to_1 = rbind(Accumulate_DF_0_to_1, intermediate)
}
View(Accumulate_DF_0_to_1)
View(Accumulate_DF)
#assembling the accumulated dataframe from 0 to 1 for each state
Accumulate_DF_0_to_1 = Accumulate_DF[0,]
for (i in 1:length(State_Names)) {
intermediate = Accumulate_DF %>%
filter(., state == State_Names[[i]][i]) %>%
mutate(., standardized_accumulation = accumulated_loss/max(accumulated_loss))
Accumulate_DF_0_to_1 = rbind(Accumulate_DF_0_to_1, intermediate)
}
warnings()
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
max(Accumulate_DF$accumulated_loss)
Accumulate_DF %>%
filter(., is.na(accumulated_loss))
A = Accumulate_DF %>%
filter(., is.na(accumulated_loss))
View(Accumulate_DF)
View(filter.raw.df.counties)
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
View(filter.raw.df.counties)
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
runApp('FEMA_Flood_Claims')
save(State_Names,
filter.raw.df,
filter.raw.df.counties,
Accumulate_DF,
Accumulate_DF_0_to_1,
major_storms,
Top_Ten_State_Names_Table,
Top_Ten_County_Names_Table,
file = "./FEMA_Flood_Claims/processed_data.Rdata")
rm(list = ls())
runApp('FEMA_Flood_Claims')
View(filter.raw.df.counties)
runApp('FEMA_Flood_Claims')
save(State_Names,
filter.raw.df,
Accumulate_DF,
Accumulate_DF_0_to_1,
major_storms,
Top_Ten_State_Names_Table,
Top_Ten_County_Names_Table,
file = "./FEMA_Flood_Claims/processed_data.Rdata")
rm(list = ls())
runApp('FEMA_Flood_Claims')
rm(list = ls())
